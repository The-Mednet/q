apiVersion: apps/v1
kind: Deployment
metadata:
  name: smtp-relay
  namespace: mednet-email
  labels:
    app: smtp-relay
    component: email-processor
    version: v1.0.0
    tier: backend
spec:
  replicas: 3  # Start with 3 for HA, will be managed by HPA
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0  # Zero downtime updates for medical service
  selector:
    matchLabels:
      app: smtp-relay
  template:
    metadata:
      labels:
        app: smtp-relay
        component: email-processor
        version: v1.0.0
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "9090"
        prometheus.io/path: "/metrics"
        # Force pod restart on config changes
        configmap/hash: "CHANGEME"
    spec:
      # Security context for medical compliance
      securityContext:
        runAsNonRoot: true
        runAsUser: 65532
        runAsGroup: 65532
        fsGroup: 65532
        seccompProfile:
          type: RuntimeDefault
      
      # Service account for RBAC
      serviceAccountName: smtp-relay
      
      # DNS configuration for faster resolution
      dnsPolicy: ClusterFirst
      dnsConfig:
        options:
        - name: ndots
          value: "2"
        - name: edns0
      
      # Anti-affinity for high availability
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 100
            podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: app
                  operator: In
                  values:
                  - smtp-relay
              topologyKey: kubernetes.io/hostname
          - weight: 50
            podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: app
                  operator: In
                  values:
                  - smtp-relay
              topologyKey: topology.kubernetes.io/zone
      
      # Topology spread for better distribution
      topologySpreadConstraints:
      - maxSkew: 1
        topologyKey: topology.kubernetes.io/zone
        whenUnsatisfiable: DoNotSchedule
        labelSelector:
          matchLabels:
            app: smtp-relay
      
      # Node selection for performance workloads
      nodeSelector:
        node-type: compute-optimized
        kubernetes.io/arch: amd64
      
      # Tolerations for dedicated nodes
      tolerations:
      - key: "mednet.com/email-processing"
        operator: "Equal"
        value: "true"
        effect: "NoSchedule"
      
      # Init container for database migration and health checks
      initContainers:
      - name: db-migration
        image: migrate/migrate:v4.16.2
        env:
        - name: DB_URL
          valueFrom:
            secretKeyRef:
              name: mysql-connection
              key: url
        command:
        - migrate
        - -path
        - /migrations
        - -database
        - $(DB_URL)
        - up
        volumeMounts:
        - name: migrations
          mountPath: /migrations
          readOnly: true
        securityContext:
          allowPrivilegeEscalation: false
          readOnlyRootFilesystem: true
          capabilities:
            drop:
            - ALL
      
      - name: wait-for-mysql
        image: busybox:1.36-uclibc
        command:
        - sh
        - -c
        - |
          until nc -z mysql-service 3306; do
            echo "Waiting for MySQL..."
            sleep 2
          done
          echo "MySQL is ready"
        securityContext:
          allowPrivilegeEscalation: false
          readOnlyRootFilesystem: true
          capabilities:
            drop:
            - ALL
      
      containers:
      - name: smtp-relay
        image: smtp-relay:1.0.0  # Use specific tags, never latest
        imagePullPolicy: IfNotPresent
        
        # Resource management for predictable performance
        resources:
          requests:
            memory: "512Mi"
            cpu: "500m"
            ephemeral-storage: "1Gi"
          limits:
            memory: "2Gi"
            cpu: "2"
            ephemeral-storage: "5Gi"
        
        # Enhanced probes for medical reliability
        livenessProbe:
          httpGet:
            path: /health
            port: 8080
            scheme: HTTP
          initialDelaySeconds: 30
          periodSeconds: 30
          timeoutSeconds: 10
          failureThreshold: 3
          successThreshold: 1
        
        readinessProbe:
          httpGet:
            path: /ready
            port: 8080
            scheme: HTTP
          initialDelaySeconds: 10
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 3
          successThreshold: 1
        
        startupProbe:
          httpGet:
            path: /health
            port: 8080
            scheme: HTTP
          initialDelaySeconds: 10
          periodSeconds: 5
          timeoutSeconds: 3
          failureThreshold: 30  # 2.5 minutes for startup
          successThreshold: 1
        
        # Ports
        ports:
        - name: smtp
          containerPort: 2525
          protocol: TCP
        - name: http
          containerPort: 8080
          protocol: TCP
        - name: metrics
          containerPort: 9090
          protocol: TCP
        
        # Environment variables from various sources
        env:
        # Application configuration
        - name: LOG_LEVEL
          value: "info"
        - name: GOMAXPROCS
          valueFrom:
            resourceFieldRef:
              resource: limits.cpu
              divisor: 1
        - name: GOMEMLIMIT
          valueFrom:
            resourceFieldRef:
              resource: limits.memory
              divisor: 1
        
        # MySQL configuration from secret
        - name: MYSQL_HOST
          value: "mysql-service"
        - name: MYSQL_PORT
          value: "3306"
        - name: MYSQL_DATABASE
          value: "relay"
        - name: MYSQL_USER
          valueFrom:
            secretKeyRef:
              name: mysql-credentials
              key: username
        - name: MYSQL_PASSWORD
          valueFrom:
            secretKeyRef:
              name: mysql-credentials
              key: password
        
        # Redis configuration for distributed rate limiting
        - name: REDIS_HOST
          value: "redis-service"
        - name: REDIS_PORT
          value: "6379"
        - name: REDIS_PASSWORD
          valueFrom:
            secretKeyRef:
              name: redis-credentials
              key: password
              optional: true
        
        # New Relic configuration
        - name: NEW_RELIC_LICENSE_KEY
          valueFrom:
            secretKeyRef:
              name: monitoring-credentials
              key: newrelic-license-key
        - name: NEW_RELIC_APP_NAME
          value: "smtp-relay-k8s"
        - name: NEW_RELIC_DISTRIBUTED_TRACING_ENABLED
          value: "true"
        
        # Queue configuration for high throughput
        - name: QUEUE_PROCESS_INTERVAL
          value: "10s"  # Faster processing for high volume
        - name: QUEUE_BATCH_SIZE
          value: "50"   # Larger batches for efficiency
        - name: QUEUE_MAX_RETRIES
          value: "5"    # More retries for reliability
        - name: QUEUE_DAILY_RATE_LIMIT
          value: "500000"  # High limit, controlled by workspace limits
        
        # SMTP configuration
        - name: SMTP_HOST
          value: "0.0.0.0"
        - name: SMTP_PORT
          value: "2525"
        - name: SMTP_MAX_SIZE
          value: "25165824"  # 24MB for larger medical documents
        - name: SMTP_READ_TIMEOUT
          value: "30s"
        - name: SMTP_WRITE_TIMEOUT
          value: "30s"
        
        # Webhook configuration
        - name: WEBHOOK_TIMEOUT
          value: "15s"
        - name: WEBHOOK_MAX_RETRIES
          value: "5"
        
        # Workspace configuration from ConfigMap
        - name: WORKSPACE_CONFIG_FILE
          value: "/config/workspace.json"
        
        # Gateway configuration
        - name: GATEWAY_CONFIG_FILE
          value: "/config/gateway-config.json"
        
        # Volume mounts
        volumeMounts:
        - name: workspace-config
          mountPath: /config
          readOnly: true
        - name: gmail-credentials
          mountPath: /app/credentials
          readOnly: true
        - name: tmp
          mountPath: /tmp
        - name: app-data
          mountPath: /app/data
        
        # Security context
        securityContext:
          allowPrivilegeEscalation: false
          readOnlyRootFilesystem: true
          capabilities:
            drop:
            - ALL
        
        # Graceful shutdown handling
        lifecycle:
          preStop:
            exec:
              command:
              - /bin/sh
              - -c
              - "sleep 15"  # Allow time for connections to drain
        
        # Termination grace period
        terminationGracePeriodSeconds: 60
      
      # Volumes
      volumes:
      - name: workspace-config
        configMap:
          name: workspace-config
          defaultMode: 0644
      
      - name: gmail-credentials
        secret:
          secretName: gmail-service-accounts
          defaultMode: 0600
      
      - name: migrations
        configMap:
          name: database-migrations
          defaultMode: 0644
      
      - name: tmp
        emptyDir:
          sizeLimit: 1Gi
      
      - name: app-data
        emptyDir:
          sizeLimit: 5Gi
      
      # Image pull secrets for private registry
      imagePullSecrets:
      - name: mednet-registry-secret